#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        leftwindow: leftwindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_GUI>;

            label = "LEFTWINDOW";
        };

        rightwindow: rightwindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT &kp RIGHT>,
                <&macro_release>;

            label = "RIGHTWINDOW";
        };

        fullwindow: fullwindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT &kp ENTER>,
                <&macro_release>;

            label = "FULLWINDOW";
        };

        capture: capture {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT &kp NUMBER_4>,
                <&macro_release>;

            label = "CAPTURE";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1       &kp N2        &kp N3            &kp N4  &kp N5       &mmv MOVE_UP     &kp N6     &kp N7  &kp N8         &kp N9       &kp N0    &kp BACKSPACE
&kp TAB     &kp Q        &kp W         &kp E             &kp R   &kp T        &mmv MOVE_DOWN   &kp Y      &kp U   &kp I          &kp O        &kp P     &kp BACKSPACE
&kp CAPS    &kp A        &kp S         &kp D             &kp F   &kp G        &mmv MOVE_LEFT   &kp H      &kp J   &kp K          &kp L        &kp SEMI  &kp APOS
&kp LSHFT   &kp Z        &kp X         &kp C             &kp V   &kp B        &mmv MOVE_RIGHT  &kp N      &kp M   &kp COMMA      &kp DOT      &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE  &leftwindow  &rightwindow  &kp LEFT_COMMAND  &mo 1   &kp SPACE    &mkp LCLK        &kp ENTER  &mo 2   &kp RIGHT_ALT  &fullwindow  &capture
            >;

            sensor-bindings = <&inc_dec_kp LC(K_SCROLL_UP) K_SCROLL_DOWN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5       &mmv MOVE_UP     &kp F6              &kp F7        &kp F8          &kp F9           &kp F10  &trans
&trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &mmv MOVE_DOWN   &kp NUMBER_6        &kp N7        &kp N8          &kp N9           &kp N0   &kp BACKSPACE
&trans      &trans        &trans        &trans        &trans        &trans       &mmv MOVE_LEFT   &kp LC(LEFT_ARROW)  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans       &mmv MOVE_RIGHT  &trans              &trans        &kp COMMA       &kp PERIOD       &trans   &trans
&kp C_MUTE  &trans        &trans        &trans        &trans        &kp SPACE    &mkp RCLK        &kp ENTER           &mo 3         &trans          &trans           &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp ESC  &trans           &trans       &trans       &trans      &trans           &mmv MOVE_UP     &trans          &trans         &trans            &trans                &trans                 &trans
&kp TAB  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH     &kp DOLLAR  &kp PERCENT      &mmv MOVE_DOWN   &kp LCTRL       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans   &trans           &trans       &trans       &trans      &trans           &mmv MOVE_LEFT   &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp NON_US_BACKSLASH   &kp GRAVE
&trans   &sys_reset       &trans       &bootloader  &trans      &trans           &mmv MOVE_RIGHT  &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
&trans   &trans           &trans       &trans       &trans      &kp LC(SPACE)    &mkp LCLK        &kp ENTER       &trans         &trans            &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans       &trans  &trans     &trans        &trans        &trans        &trans  &bt BT_CLR_ALL
&trans  &trans        &trans        &trans  &trans  &trans       &trans  &trans     &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &bl BL_TOG    &bl BL_INC    &trans  &trans  &trans       &trans  &trans     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans        &bl BL_DEC    &trans  &trans  &trans       &trans  &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0  &trans
&trans  &trans        &trans        &trans  &trans  &kp SPACE    &trans  &kp ENTER  &trans        &trans        &trans        &trans
            >;
        };
    };
};
